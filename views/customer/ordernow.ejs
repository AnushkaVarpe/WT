<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" type="text/css" href="/styles.css">
<%- include('../partials/customerHeader', { customerName: customerName }) %>
<body>
  <h2>Order Review for <%= meal.name %></h2>
  <div class="meal-container container px-4 py-5">
  <div class="meal-card col-12 col-md-4" data-seller-address="<%= meal.seller_address %>">
    <div class="meal-content card flex-fill">
      <div class="img-box">
        <% if (meal.image_url) { %>
          <img class="meal-img" src="<%= meal.image_url %>" alt="<%= meal.name %>">
        <% } %>
      </div>
      <div class="card-body">
      <h2 class="meal-name"><%= meal.name %></h2>
      <p><strong>Price:</strong> ₹<span class="meal-price"><%= meal.price %></span></p>
      <p><strong>Contents:</strong> <%= meal.contents %></p>
      <p><strong>Preparation Time:</strong> <%= meal.prep_time %></p>
      <p><strong>Seller:</strong> <%= meal.seller_name %></p>
    </div>
    </div>
  </div>
</div>
<div class="container mb-4"> 
  <div class="location-info text-center">
    <p class="fw-bold">Choose Delivery Location:</p>
    
    <div class="form-check form-check-inline">
      <input type="checkbox" class="form-check-input" id="use-current-location" onchange="toggleAddressInput()">
      <label class="form-check-label" for="use-current-location">Use my current location: <%= customerLocation %></label>
    </div>
    
    <div id="new-address-container" class="mt-3">
      <p>Or enter a new delivery address:</p>
      <input type="text" class="form-control" id="delivery-address" placeholder="Enter your delivery address">
    </div>
    </div>

  <div class="text-center"> 
    <button id="pay-button" class="btn btn-primary" style="margin-top: 20px;" disabled>Pay</button>
  </div>
</div>

  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>
    
async function calculateTotalAmount() {
  let total = 0;

  document.querySelectorAll('.meal-price').forEach(function (priceElement) {
    const price = parseFloat(priceElement.innerText.replace('₹', '').trim());
    total += price;
  });

  const useCurrentLocation = document.getElementById('use-current-location').checked;
  const deliveryAddress = useCurrentLocation ? "<%= customerLocation %>" : document.getElementById('delivery-address').value.trim();

  if (deliveryAddress) {
    const sellerAddresses = Array.from(document.querySelectorAll('.meal-card')).map(mealCard => mealCard.getAttribute('data-seller-address'));

    const response = await fetch('/calculate-distance', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        sellerAddresses: sellerAddresses,
        deliveryAddress: deliveryAddress
      })
    });

    const data = await response.json();
    console.log('Distance Calculation Response:', data); // Log response

    if (data.error) {
      console.error('Error calculating distance:', data.error);
      return total; // Return total without adding delivery charge
    }

    const deliveryCharge = data.totalDeliveryCharge || 0; // Ensure this value exists in response
    const finalTotal = total + deliveryCharge;
    console.log("Final total with delivery charges: ₹" + finalTotal); // Log final total
    return finalTotal;
  } else {
    console.error('Delivery address is missing.');
    return total; // Return total without adding delivery charge
  }
}

document.getElementById('pay-button').onclick = async function (e) {
  e.preventDefault();

  const totalAmount = await calculateTotalAmount() * 100; // Total in paise
  const deliveryAddress = document.getElementById('use-current-location').checked ? "<%= customerLocation %>" : document.getElementById('delivery-address').value;

  if (!deliveryAddress) {
    alert('Please select or enter a delivery location.');
    return;
  }

  // Gather all cart items to send to server
  const cartItems = [];
  document.querySelectorAll('.meal-card').forEach(card => {
    const mealName = card.querySelector('.meal-name').innerText;
    const sellerId = card.getAttribute('data-seller-id');
    const price = parseFloat(card.querySelector('.meal-price').innerText.replace('₹', '').trim());

    cartItems.push({
      mealName: mealName,
      sellerId: sellerId,
      orderAmount: price
    });
  });

  fetch('/create-orders', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      amount: totalAmount,
      address: deliveryAddress,
      cart: cartItems // Pass the entire cart array
    })
  })
  .then(response => response.json())
  .then(data => {
    const options = {
      "key": "<%= process.env.RAZORPAY_KEY_ID %>",
      "amount": data.amount,
      "order_id": data.id,
      "handler": function (response) {
        fetch('/payment-confirmations', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            paymentId: response.razorpay_payment_id,
            orderId: response.razorpay_order_id
          })
        })
        .then(() => window.location.href = '/payment-confirmations');
      }
    };
    const rzp1 = new Razorpay(options);
    rzp1.open();
  })
  .catch(error => console.error('Error:', error));
};


function toggleAddressInput() {
      const useCurrentLocation = document.getElementById('use-current-location');
      const newAddressContainer = document.getElementById('new-address-container');
      const payButton = document.getElementById('pay-button');

      if (useCurrentLocation.checked) {
        newAddressContainer.style.display = 'none';
        payButton.disabled = false;
        document.getElementById('location-error').style.display = 'none';
      } else {
        newAddressContainer.style.display = 'block';
        validateLocation();
      }
}

function validateLocation() {
      const newAddress = document.getElementById('delivery-address').value.trim();
      const payButton = document.getElementById('pay-button');
      const locationError = document.getElementById('location-error');

      if (newAddress) {
        payButton.disabled = false;
        locationError.style.display = 'none';
      } else {
        payButton.disabled = true;
      }
}

document.getElementById('delivery-address').addEventListener('input', validateLocation);

toggleAddressInput();
</script>
</body>

<%- include('../partials/footer') %>
